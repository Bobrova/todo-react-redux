{"version":3,"sources":["components/Header/Header.jsx","components/Header/index.js","constants/ActionTypes.js","actions/index.js","constants/constants.js","components/Textarea/index.js","components/Textarea/Textarea.jsx","components/BtnSelectAll/BtnSelectAll.jsx","components/BtnSelectAll/index.js","components/BtnDelete/index.js","components/BtnDelete/BtnDelete.jsx","components/ItemTaskList/index.js","components/ItemTaskList/ItemTaskList.jsx","components/ListFooter/index.js","components/ListFooter/ListFooter.jsx","components/TaskList/index.js","components/TaskList/TaskList.jsx","selectors/index.js","constants/TodoFilters.js","containers/TaskList.js","components/Main/index.js","components/Main/Main.jsx","containers/Main.js","components/App/App.jsx","components/App/index.js","reducers/ToDoList.js","reducers/ToDoFilters.js","reducers/index.js","index.js"],"names":["Header","react_default","a","createElement","className","ADD_TODO","DELETE_TODO","SET_VISIBILITY_FILTER","EDIT_TODO","COMPLETE_TODO","COMPLETE_ALL_TODOS","CLEAR_COMPLETED","addTodo","task","type","types","deleteTodo","id","editTodo","text","completeTodo","completeAllTodos","clearCompleted","setVisibilityFilter","filter","ENTER_KEY_CODE","Textarea","handleKeyPress","e","_this$props","_this","props","itemId","target","value","keyCode","preventDefault","test","title","completed","wrap","placeholder","onKeyDown","this","Component","BtnSelectAll","isAllChecked","classActive","concat","onClick","String","fromCharCode","BtnDelete","handleClickBtn","onClickDelete","ItemTaskList","state","idEdit","valueBeforeEdit","handleClickCheckbox","todolist","_this$props2","trim","setState","handleInputBlur","_this$props3","handleInputChange","handleDoubleClick","_this$state","_this$props4","isEdit","Fragment","autoFocus","onChange","onBlur","checked","htmlFor","onDoubleClick","components_BtnDelete","ListFooter","handleClickTab","innerHTML","tab","countActiveItem","isCheckedExists","borderAll","borderActive","borderCompleted","TaskList","filteredTodos","actions","listItem","map","item","key","components_ItemTaskList","components_ListFooter","getTodos","todos","getVisibleTodos","createSelector","todoFilters","itemList","getcountActiveItem","length","getCurrentId","connect","todoList","dispatch","bindActionCreators","TodoActions","Main","isOpen","currentId","components_BtnSelectAll","components_Textarea","containers_TaskList","App","components_Header","containers_Main","initialState","localStorage","getItem","JSON","parse","combineReducers","arguments","undefined","action","Object","toConsumableArray","todo","areAllMarked","every","objectSpread","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","stringify","getState","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.ee05ac42.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nfunction Header() {\n  return (\n    <h1 className=\"headline\">todos</h1>\n  );\n}\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const COMPLETE_TODO = 'COMPLETE_TODO';\r\nexport const COMPLETE_ALL_TODOS = 'COMPLETE_ALL_TODOS';\r\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED';\r\n","import * as types from '../constants/ActionTypes';\r\n\r\nexport const addTodo = task => ({ type: types.ADD_TODO, task });\r\nexport const deleteTodo = id => ({ type: types.DELETE_TODO, id });\r\nexport const editTodo = (id, text) => ({ type: types.EDIT_TODO, id, text });\r\nexport const completeTodo = id => ({ type: types.COMPLETE_TODO, id });\r\nexport const completeAllTodos = () => ({ type: types.COMPLETE_ALL_TODOS });\r\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED });\r\nexport const setVisibilityFilter = filter => ({ type: types.SET_VISIBILITY_FILTER, filter });\r\n","export const ENTER_KEY_CODE = 13;\r\n","import Textarea from './Textarea';\n\nexport default Textarea;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ENTER_KEY_CODE } from '../../constants/constants';\nimport './style.css';\n\nclass Textarea extends Component {\n  handleKeyPress = (e) => {\n    const { addTodo, itemId } = this.props;\n    const text = e.target.value;\n    if (e.keyCode === ENTER_KEY_CODE) {\n      e.preventDefault();\n      if (text !== '' && /\\S/.test(text)) {\n        e.target.value = '';\n        const task = { id: itemId + 1, title: text, completed: false };\n        addTodo(task);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <textarea\n        wrap=\"off\"\n        className=\"main__input-area\"\n        placeholder=\"What needs to be done?\"\n        onKeyDown={this.handleKeyPress}\n      />\n    );\n  }\n}\n\nTextarea.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n  itemId: PropTypes.number.isRequired,\n};\n\nexport default Textarea;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nfunction BtnSelectAll(props) {\n  const { isAllChecked, completeAllTodos } = props;\n  const classActive = isAllChecked ? 'active' : '';\n  return (\n    <div className={`checked-items ${classActive}`} onClick={completeAllTodos}>{String.fromCharCode(709)}</div>\n  );\n}\n\nBtnSelectAll.propTypes = {\n  isAllChecked: PropTypes.bool.isRequired,\n  completeAllTodos: PropTypes.func.isRequired,\n};\n\nexport default BtnSelectAll;\n","import BtnSelectAll from './BtnSelectAll';\n\nexport default BtnSelectAll;\n","import BtnDelete from './BtnDelete';\n\nexport default BtnDelete;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nclass BtnDelete extends Component {\n  handleClickBtn = () => {\n    const { onClickDelete, id } = this.props;\n    onClickDelete(id);\n  }\n\n  render() {\n    return (\n      <div className=\"btnDel\" onClick={this.handleClickBtn} />\n    );\n  }\n}\n\nBtnDelete.propTypes = {\n  id: PropTypes.number.isRequired,\n  onClickDelete: PropTypes.func.isRequired,\n};\n\nexport default BtnDelete;\n","import ItemTaskList from './ItemTaskList';\n\nexport default ItemTaskList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport BtnDelete from '../BtnDelete';\nimport { ENTER_KEY_CODE } from '../../constants/constants';\nimport './style.css';\n\nclass ItemTaskList extends Component {\n  state = {\n    idEdit: 0,\n    valueBeforeEdit: '',\n  };\n\n  handleClickCheckbox = () => {\n    const { completeTodo, todolist } = this.props;\n    completeTodo(todolist.id);\n  }\n\n  handleKeyPress = (e) => {\n    const { deleteTodo, todolist, editTodo } = this.props;\n    if (e.keyCode === ENTER_KEY_CODE) {\n      e.preventDefault();\n      const text = e.target.value.trim();\n      if (text === '') return deleteTodo(todolist.id);\n      if (text !== '' && /\\S/.test(text)) {\n        e.target.value = '';\n        editTodo(todolist.id, text);\n        this.setState({\n          idEdit: 0,\n        });\n      }\n    }\n  }\n\n  handleInputBlur = (e) => {\n    const { deleteTodo, todolist, editTodo } = this.props;\n    const text = e.target.value.trim();\n    if (text === '') return deleteTodo(todolist.id);\n    e.target.value = '';\n    editTodo(todolist.id, text);\n    this.setState({\n      idEdit: 0,\n    });\n  }\n\n  handleInputChange = (e) => {\n    this.setState({ valueBeforeEdit: e.target.value });\n  }\n\n  handleDoubleClick = () => {\n    const { todolist } = this.props;\n\n    this.setState({\n      idEdit: todolist.id,\n      valueBeforeEdit: todolist.title,\n    });\n  }\n\n  render() {\n    const { idEdit, valueBeforeEdit } = this.state;\n    const { todolist, deleteTodo } = this.props;\n    const { completed } = todolist;\n    const isEdit = (todolist.id === idEdit);\n\n    return (\n      <React.Fragment>\n        {isEdit ? (\n          <input\n            type=\"text\"\n            autoFocus\n            className=\"text-editing\"\n            value={valueBeforeEdit}\n            onChange={this.handleInputChange}\n            onKeyDown={this.handleKeyPress}\n            onBlur={this.handleInputBlur}\n          />\n        ) : (\n          <div className=\"listItemWrapper\">\n            <input\n              type=\"checkbox\"\n              id={todolist.id}\n              checked={completed}\n              className=\"list-checkbox\"\n              onChange={this.handleClickCheckbox}\n            />\n            <label htmlFor={todolist.id} />\n            <span className=\"task-list_text\" onDoubleClick={this.handleDoubleClick}>{todolist.title}</span>\n            <BtnDelete onClickDelete={deleteTodo} id={todolist.id} />\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nItemTaskList.propTypes = {\n  todolist: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  editTodo: PropTypes.func.isRequired,\n  completeTodo: PropTypes.func.isRequired,\n};\n\nexport default ItemTaskList;\n","import ListFooter from './ListFooter';\n\nexport default ListFooter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nclass ListFooter extends Component {\n  handleClickTab = (e) => {\n    const { setVisibilityFilter } = this.props;\n    const tab = e.target.innerHTML;\n    setVisibilityFilter(tab);\n  }\n\n  render() {\n    const {\n      tab,\n      clearCompleted,\n      countActiveItem,\n      isCheckedExists,\n    } = this.props;\n\n    const borderAll = (tab === 'All') ? 'activeBord' : '';\n    const borderActive = (tab === 'Active') ? 'activeBord' : '';\n    const borderCompleted = (tab === 'Completed') ? 'activeBord' : '';\n    return (\n      <li className=\"list-footer\">\n        <span className=\"footer-item item-select active-task\">{countActiveItem === 1 ? `${countActiveItem} item left` : `${countActiveItem} items left`}</span>\n        <div className=\"bookmarks-wrapper\">\n          <span className={`footer-item bookmarks ${borderAll}`} onClick={this.handleClickTab}>All</span>\n          <span className={`footer-item bookmarks ${borderActive}`} onClick={this.handleClickTab}>Active</span>\n          <span className={`footer-item bookmarks ${borderCompleted}`} onClick={this.handleClickTab}>Completed</span>\n        </div>\n        {isCheckedExists && <span className=\"footer-item delete-completed\" onClick={clearCompleted}>Clear completed</span>}\n      </li>\n    );\n  }\n}\n\nListFooter.propTypes = {\n  tab: PropTypes.string.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  countActiveItem: PropTypes.number.isRequired,\n  isCheckedExists: PropTypes.bool.isRequired,\n  setVisibilityFilter: PropTypes.func.isRequired,\n};\n\nexport default ListFooter;\n","import TaskList from './TaskList';\n\nexport default TaskList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ItemTaskList from '../ItemTaskList';\nimport ListFooter from '../ListFooter';\nimport './style.css';\n\nconst TaskList = (props) => {\n  const {\n    isCheckedExists,\n    countActiveItem,\n    tab,\n    filteredTodos,\n    actions,\n  } = props;\n\n  const {\n    deleteTodo,\n    completeTodo,\n    editTodo,\n    clearCompleted,\n    setVisibilityFilter,\n  } = actions;\n\n  const listItem = filteredTodos.map(item => (\n    <li key={item.id} className=\"list-item\">\n      <ItemTaskList\n        todolist={item}\n        deleteTodo={deleteTodo}\n        completeTodo={completeTodo}\n        editTodo={editTodo}\n      />\n    </li>\n  ));\n\n  return (\n    <ul className=\"main__task-list\">\n      {listItem}\n      <ListFooter\n        isCheckedExists={isCheckedExists}\n        countActiveItem={countActiveItem}\n        tab={tab}\n        clearCompleted={clearCompleted}\n        setVisibilityFilter={setVisibilityFilter}\n      />\n    </ul>\n  );\n};\n\nTaskList.propTypes = {\n  isCheckedExists: PropTypes.bool.isRequired,\n  countActiveItem: PropTypes.number.isRequired,\n  tab: PropTypes.string.isRequired,\n  filteredTodos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  actions: PropTypes.object.isRequired,\n};\n\nexport default TaskList;\n","import { createSelector } from 'reselect';\r\nimport * as tabs from '../constants/TodoFilters';\r\n\r\nconst getVisibilityFilter = (state) => state.todoFilters;\r\nconst getTodos = (state) => state.todos;\r\n\r\nexport const getVisibleTodos = createSelector(\r\n  [getVisibilityFilter, getTodos],\r\n  (todoFilters, todos) => {\r\n    switch (todoFilters) {\r\n      case tabs.SHOW_ALL:\r\n        return todos;\r\n      case tabs.SHOW_COMPLETED:\r\n        return todos.filter(itemList => itemList.completed);\r\n      case tabs.SHOW_ACTIVE:\r\n        return todos.filter(itemList => !itemList.completed);\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n);\r\n\r\nexport const getcountActiveItem = createSelector(\r\n  [getTodos],\r\n  todos => {\r\n    return (todos.filter(itemList => !itemList.completed)).length;\r\n  },\r\n);\r\n\r\nexport const isCheckedExists = createSelector(\r\n  [getTodos],\r\n  todos => {\r\n    return (todos.filter(itemList => itemList.completed)).length !== 0;\r\n  },\r\n);\r\n\r\nexport const getCurrentId = createSelector(\r\n  [getTodos],\r\n  todos => {\r\n    return todos.length !== 0 ? todos[todos.length - 1].id : 0;\r\n  },\r\n);\r\n","export const SHOW_ALL = 'All';\r\nexport const SHOW_COMPLETED = 'Completed';\r\nexport const SHOW_ACTIVE = 'Active';\r\n","import { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as TodoActions from '../actions';\r\nimport TaskList from '../components/TaskList';\r\nimport { getVisibleTodos, getcountActiveItem, isCheckedExists } from '../selectors';\r\n\r\nconst mapStateToProps = state => ({\r\n  todoList: state.todos,\r\n  countActiveItem: getcountActiveItem(state),\r\n  isCheckedExists: isCheckedExists(state),\r\n  tab: state.todoFilters,\r\n  filteredTodos: getVisibleTodos(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(TodoActions, dispatch),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(TaskList);\r\n","import Main from './Main';\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Textarea from '../Textarea';\nimport BtnSelectAll from '../BtnSelectAll';\nimport TaskList from '../../containers/TaskList';\nimport './style.css';\n\nconst Main = (props) => {\n  const {\n    todolist,\n    isOpen,\n    currentId,\n    actions,\n  } = props;\n\n  const {\n    addTodo,\n    completeAllTodos,\n  } = actions;\n\n  const countActiveItem = (todolist.filter(itemList => !itemList.completed)).length;\n  return (\n    <div className=\"main\">\n      <div className=\"main__header\">\n        {isOpen && (\n          <BtnSelectAll\n            completeAllTodos={completeAllTodos}\n            isAllChecked={countActiveItem === 0}\n          />\n        )}\n        <Textarea addTodo={addTodo} itemId={currentId} />\n      </div>\n      {isOpen && <TaskList />}\n    </div>\n  );\n};\n\nMain.propTypes = {\n  todolist: PropTypes.array.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  currentId: PropTypes.number.isRequired,\n  actions: PropTypes.object.isRequired,\n};\n\nexport default Main;\n","import { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as TodoActions from '../actions';\r\nimport Main from '../components/Main';\r\nimport { getCurrentId } from '../selectors';\r\n\r\nconst mapStateToProps = state => ({\r\n  isOpen: state.todos.length !== 0,\r\n  todolist: state.todos,\r\n  currentId: getCurrentId(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(TodoActions, dispatch),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Main);\r\n","import React from 'react';\nimport Header from '../Header';\nimport Main from '../../containers/Main';\nimport './style.css';\n\nfunction App() {\n  return (\n    <section className=\"todo-Page\">\n      <Header />\n      <Main />\n    </section>\n  );\n}\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","import {\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  EDIT_TODO,\r\n  COMPLETE_TODO,\r\n  COMPLETE_ALL_TODOS,\r\n  CLEAR_COMPLETED,\r\n} from '../constants/ActionTypes';\r\n\r\nconst initialState = localStorage.getItem('todoApp-redux')\r\n  ? JSON.parse(localStorage.getItem('todoApp-redux')).todos\r\n  : [];\r\n\r\nexport default function todos(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, action.task];\r\n\r\n    case DELETE_TODO:\r\n      return state.filter(todo => todo.id !== action.id);\r\n\r\n    case COMPLETE_ALL_TODOS: {\r\n      const areAllMarked = state.every(todo => todo.completed);\r\n      return state.map(todo => ({\r\n        ...todo,\r\n        completed: !areAllMarked,\r\n      }));\r\n    }\r\n\r\n    case EDIT_TODO:\r\n      return state.map(todo => (todo.id === action.id\r\n        ? { ...todo, title: action.text }\r\n        : todo));\r\n\r\n    case COMPLETE_TODO:\r\n      return state.map(todo => (todo.id === action.id\r\n        ? { ...todo, completed: !todo.completed }\r\n        : todo));\r\n\r\n    case CLEAR_COMPLETED:\r\n      return state.filter(todo => todo.completed === false);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_VISIBILITY_FILTER } from '../constants/ActionTypes';\r\nimport { SHOW_ALL } from '../constants/TodoFilters';\r\n\r\nconst initialState = localStorage.getItem('todoApp-redux')\r\n  && JSON.parse(localStorage.getItem('todoApp-redux')).todos.length !== 0\r\n  ? JSON.parse(localStorage.getItem('todoApp-redux')).todoFilters\r\n  : SHOW_ALL;\r\n\r\nexport default function todoFilters(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_VISIBILITY_FILTER:\r\n      return action.filter;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport todos from './ToDoList';\r\nimport todoFilters from './ToDoFilters';\r\n\r\nexport default combineReducers({\r\n  todos,\r\n  todoFilters,\r\n});\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport reducer from './reducers';\nimport './index.css';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__\n  && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nconst update = () => {\n  localStorage.setItem('todoApp-redux', JSON.stringify(store.getState()));\n};\n\nstore.subscribe(update);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}